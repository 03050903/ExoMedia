apply plugin: 'com.android.library'
apply plugin: 'maven'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

// Maven GAV
def groupId = 'com.devbrackets.android'
archivesBaseName = 'exomedia'
version = "${versionMajor}.${versionMinor}.${versionPatch}" // release version

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // Android
    compile 'com.android.support:appcompat-v7:22.0.0' // includes support-v4

    // Event Bus
    compile 'com.squareup:otto:1.3.6'

    // ExoPlayer
    compile fileTree(dir: 'lib', include: ['*.jar'])
}

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 22

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

// ======== MAVEN DEPLOY to local cache or nexus repo (to make accessible to local projects) (command: ./gradlew clean aRel uploadArchives) ========
uploadArchives {
    repositories {
        // deploy to local
        mavenDeployer {
            repository (url: "file://${System.env.HOME}/.m2/repository/")
            pom.groupId = groupId
            pom.artifactId = archivesBaseName
            pom.version = version + '-SNAPSHOT'
            pom.packaging = 'aar'
            uniqueVersion = false // don't put in a timestamp on the filename (other project will not be able to depend on it)
        }
    }
}
